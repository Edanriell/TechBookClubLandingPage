---
import { Image } from "astro:assets";

import Score from "@widgets/score/ui/score.astro";

import user1image from "@public/images/raster/persons/man-1.jpg";
import user2image from "@public/images/raster/persons/man-2.jpg";
import user3image from "@public/images/raster/persons/man-3.jpg";

interface Props {
	className?: string;
	loading?: "eager" | "lazy";
	decoding?: "async" | "auto" | "sync";
}

const { className, loading, decoding } = Astro.props;

const usersImages = [
	{
		imageSrc: user1image,
	},
	{
		imageSrc: user2image,
	},
	{
		imageSrc: user3image,
	}
];

const activeUsersCount: number = 200;
---

<div class={"total-score " + className}>
	<ul class="total-score__users-image-list users-image-list">
		{usersImages.map(({ imageSrc }) => (
			<li class="users-image-list__item">
				<Image decoding={decoding} loading={loading} class="users-image-list__user-image" src={imageSrc} alt="Smiling asian man" width="40" height="40"/>
			</li>
		))}
	</ul>
	<div class="total-score__total-value">
		<Score loading={loading} decoding={decoding} count={5} />
		<p class="total-score__active-users-count">{activeUsersCount}+ developers joined already</p>
	</div>
</div>

<style lang="less">
	.total-score {
		display: flex;
		flex-direction: row;
		align-items: center;
		column-gap: 12rem;
		margin-top: 20rem;
	}

	.total-score__users-image-list {
		position: relative;
	}

	.users-image-list {
		display: flex;
		flex-direction: row;
		align-items: center;
	}

	.users-image-list__item {
		margin-right: -5rem;
		flex: 0 0 auto;
	}

	.users-image-list__user-image {
		width: 40rem;
		height: 40rem;
		background-color: #fff;
		border: 2rem solid #fff;
		border-radius: 50%;
		object-fit: cover;
	}

	.total-score__total-value {
		display: flex;
		flex-direction: column;
		row-gap: 9rem;
	}

	.total-score__active-users-count {
		font-family: var(--font-family), sans-serif;
		font-weight: 400;
		font-size: 14rem;
		line-height: 120%;
		letter-spacing: -0.07em;
		color: inherit;
	}
</style>